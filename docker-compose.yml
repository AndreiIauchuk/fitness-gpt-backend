services:

  backend:
    container_name: fitness-gpt-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - fitness-gpt-network

  postgres:
    container_name: fitness-gpt-postgres
    image: postgres:14-alpine
    ports:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 3s
      timeout: 5s
      retries: 4
      start_period: 3s
    networks:
      - fitness-gpt-network

  # На текущем этапе разработки пускай будет в этом compose для удобства.
  # В будущем можем перенести в отдельный docker-compose?
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    ports:
      - "8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=username@domain-name.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - fitness-gpt-network

  frontend:
    container_name: fitness-gpt-frontend
    build:
      context: front
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - fitness-gpt-network

volumes:
  db-data:
  pgadmin-data:


networks:
  fitness-gpt-network:
